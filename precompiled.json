{
  "0x0000000000000000000000000000000000000001": {
    "name": "ecRecover",
    "input": "hash | v | r | s",
    "output": "publicAddress",
    "description": "Elliptic curve digital signature algorithm (ECDSA) public key recovery function"
  },
  "0x0000000000000000000000000000000000000002": {
    "name": "SHA2-256",
    "input": "data",
    "output": "hash",
    "description": "Hash function",
    "dynamicFee": {
      "homestead": {
        "inputs": {
          "size": {
            "type": "number",
            "label": "Byte size of data"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000003": {
    "name": "RIPEMD-160",
    "input": "data",
    "output": "hash",
    "description": "Hash function",
    "dynamicFee": {
      "homestead": {
        "inputs": {
          "size": {
            "type": "number",
            "label": "Byte size of data"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000004": {
    "name": "identity",
    "input": "data",
    "output": "data",
    "description": "Returns the input",
    "dynamicFee": {
      "homestead": {
        "inputs": {
          "size": {
            "type": "number",
            "label": "Byte size of data"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000005": {
    "name": "modexp",
    "input": "Bsize | Esize | Msize | B | E | M",
    "output": "value",
    "description": "Arbitrary-precision exponentiation under modulo",
    "dynamicFee": {
      "byzantium": {
        "inputs": {
          "Bsize": {
            "type": "number",
            "label": "Input: Bsize"
          },
          "Msize": {
            "type": "number",
            "label": "Input: Msize"
          },
          "exponent": {
            "type": "number",
            "label": "Input: E"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000006": {
    "name": "ecAdd",
    "input": "x1 | y1 | x2 | y2",
    "output": "x | y",
    "description": "Point addition (ADD) on the elliptic curve 'alt_bn128'",
    "dynamicFee": {
      "byzantium": {
        "inputs": {
          "invalid": {
            "type": "boolean",
            "label": "Is the input invalid?"
          },
          "remaining": {
            "type": "number",
            "label": "State: remaining gas in the current context"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000007": {
    "name": "ecMul",
    "input": "x1 | y1 | s",
    "output": "x | y",
    "description": "Scalar multiplication (MUL) on the elliptic curve 'alt_bn128'",
    "dynamicFee": {
      "byzantium": {
        "inputs": {
          "invalid": {
            "type": "boolean",
            "label": "Is the input invalid?"
          },
          "remaining": {
            "type": "number",
            "label": "State: remaining gas in the current context"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000008": {
    "name": "ecPairing",
    "input": "x1 | y1 | x2 | y2 | ... | xk | yk",
    "output": "success",
    "description": "Bilinear function on groups on the elliptic curve 'alt_bn128'",
    "dynamicFee": {
      "homestead": {
        "inputs": {
          "size": {
            "type": "number",
            "label": "Byte size of data"
          }
        }
      }
    }
  },
  "0x0000000000000000000000000000000000000009": {
    "name": "blake2f",
    "input": "",
    "output": "",
    "description": "Compression function F used in the BLAKE2 cryptographic hashing algorithm"
  }
}
